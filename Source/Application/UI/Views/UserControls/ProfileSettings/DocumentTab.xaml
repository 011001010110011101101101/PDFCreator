<UserControl x:Class="pdfforge.PDFCreator.UI.Views.UserControls.ProfileSettings.DocumentTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:obsidian="clr-namespace:pdfforge.Obsidian;assembly=Obsidian"
             xmlns:converter="clr-namespace:pdfforge.PDFCreator.UI.ViewModels.Converter;assembly=PDFCreator.ViewModels"
             xmlns:views="clr-namespace:pdfforge.PDFCreator.UI.Views"
             xmlns:userControls="clr-namespace:pdfforge.PDFCreator.UI.Views.UserControls"
             xmlns:profileSettings="clr-namespace:pdfforge.PDFCreator.UI.DesignTimeViewModels.UserControls.ProfileSettings;assembly=PDFCreator.DesignTimeViewModels"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance profileSettings:DesignTimeDocumentTabViewModel, IsDesignTimeCreatable=True}">

    <UserControl.Resources>
        <converter:ColorConverter x:Key="ColorConverter" />
        <converter:TokenReplacerConverter x:Key="TokenReplacerConverter" />
    </UserControl.Resources>

    <StackPanel Orientation="Vertical">
        <HeaderedContentControl Name="MetadataControl" Template="{StaticResource HeaderPanelTemplate}"
                                Header="Metadata">
            <Grid Margin="0,5,0,0">
                <Grid.Resources>
                    <Style TargetType="TextBox">
                        <Setter Property="Margin" Value="0,0,0,4" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                    </Style>

                    <Style TargetType="Label">
                        <Setter Property="Margin" Value="0" />
                    </Style>

                    <Style TargetType="views:BindableTextBox">
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Margin" Value="0" />
                    </Style>

                    <Style TargetType="ComboBox">
                        <Setter Property="VerticalAlignment" Value="Center" />
                    </Style>
                </Grid.Resources>


                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="80" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition />

                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <!--title part-->

                <!--Title text-->
                <!--author label-->
                <Label Name="TitleLabel" Grid.Row="0" Grid.Column="0"  FontWeight="Bold">Title:</Label>
                <!--Title textbox-->
                <views:BindableTextBox x:Name="TitleTextBox" Grid.Row="0" Grid.Column="1" 
                                       Text="{Binding TitleViewModel.Text}" 
                                       BindableSelectionStart="{Binding TitleViewModel.CurrentCursorPos}" />
                <!--Title token label-->
                <Label Name="TitleTokenLabel" Grid.Row="0" Grid.Column="2"  >Add Token:</Label>
                <!--Title token combobox-->
                <ComboBox 
                    Name="TitleTokensComboBox" Grid.Row="0" Grid.Column="3"  ItemsSource="{Binding TitleViewModel.TokenList}" SelectedItem="{Binding TitleViewModel.SelectedToken}" IsSynchronizedWithCurrentItem="True">
                    <i:Interaction.Behaviors>
                        <obsidian:EventToCommandBehavior Event="SelectionChanged"
                        Command="{Binding TitleViewModel.OnSelectionChangedCommand}" />
                    </i:Interaction.Behaviors>
                </ComboBox>
                <!--Title preview label-->
                <Label Foreground="DarkGray"  Name="TitlePreviewLabel" Grid.Row="1" Grid.Column="0" Padding="5,0,0,13">Preview:</Label>
                <!--Title preview textbox-->
                <TextBox Name="TitlePreviewText" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" IsEnabled="False" >
                    <TextBox.Text>
                        <MultiBinding Converter="{StaticResource TokenReplacerConverter}">
                            <Binding ElementName="TitleTextBox" Path="Text" UpdateSourceTrigger="PropertyChanged" />
                            <Binding Path="TokenReplacer" />
                        </MultiBinding>
                    </TextBox.Text>
                </TextBox>
                <!--Title preview tokenhintpanel-->
                <userControls:TokenHintPanel Grid.Row="1" Grid.Column="3" TextWithToken="{Binding Text, ElementName=TitleTextBox}" Translator="{Binding Translator}" />
                <!--author part-->

                <!--author label-->
                <Label Name="AuthorLabel" Grid.Row="2" Grid.Column="0" FontWeight="Bold">Author:</Label>
                <!--author textbox-->
                <views:BindableTextBox x:Name="AuthorTextBox" Grid.Row="2" Grid.Column="1"
                                       Text="{Binding AuthorViewModel.Text}" BindableSelectionStart="{Binding AuthorViewModel.CurrentCursorPos}"/>
                <!--author token label-->
                <Label Name="AuthorTokenLabel" Grid.Row="2" Grid.Column="2" >Add Token:</Label>
                <!--author token combobox-->
                <ComboBox 
                    Name="AuthorTokensComboBox" Grid.Row="2" Grid.Column="3"  ItemsSource="{Binding AuthorViewModel.TokenList}" SelectedItem="{Binding AuthorViewModel.SelectedToken}" IsSynchronizedWithCurrentItem="True">
                    <i:Interaction.Behaviors>
                        <obsidian:EventToCommandBehavior Event="SelectionChanged"
                        Command="{Binding AuthorViewModel.OnSelectionChangedCommand}" />
                    </i:Interaction.Behaviors>
                </ComboBox>
                <!--author preview label-->
                <Label Foreground="DarkGray"  Name="AuthorPreviewLabel" Grid.Row="3" Grid.Column="0" Padding="5,0,0,13">Preview:</Label>
                <!--author preview textbox-->
                <TextBox Name="AuthorPreviewText" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2"  IsEnabled="False">
                    <TextBox.Text>
                        <MultiBinding Converter="{StaticResource TokenReplacerConverter}">
                            <Binding ElementName="AuthorTextBox" Path="Text" UpdateSourceTrigger="PropertyChanged" />
                            <Binding Path="TokenReplacer" />
                        </MultiBinding>
                    </TextBox.Text>
                </TextBox>
                <!--author preview tokenhintpanel-->
                <userControls:TokenHintPanel Grid.Row="3" Grid.Column="3" TextWithToken="{Binding Text, ElementName=AuthorTextBox}" Translator="{Binding Translator}" />

                <!--Subject part-->

                <!--subject label-->
                <Label Name="SubjectLabel" Grid.Row="4" Grid.Column="0"  FontWeight="Bold">Subject:</Label>
                <!--subject textbox-->
                <views:BindableTextBox x:Name="SubjectTextBox" Grid.Row="4" Grid.Column="1" 
                                       Text="{Binding SubjectViewModel.Text}" 
                                       BindableSelectionStart="{Binding SubjectViewModel.CurrentCursorPos}" />
                <!--subject token label-->
                <Label Name="SubjectTokenLabel" Grid.Row="4" Grid.Column="2">Add Token:</Label>
                <!--subject token combobox-->
                <ComboBox 
                    Name="SubjectTokensComboBox" Grid.Row="4" Grid.Column="3" ItemsSource="{Binding SubjectViewModel.TokenList}" SelectedItem="{Binding SubjectViewModel.SelectedToken}" IsSynchronizedWithCurrentItem="True"  >
                    <i:Interaction.Behaviors>
                        <obsidian:EventToCommandBehavior Event="SelectionChanged"
                        Command="{Binding SubjectViewModel.OnSelectionChangedCommand}" />
                    </i:Interaction.Behaviors>
                </ComboBox>
                <!--Subject preview label-->
                <Label Foreground="DarkGray" Name="SubjectPreviewLabel" Grid.Row="5" Grid.Column="0" Padding="5,0,0,13">Preview:</Label>
                <!--subject preview textbox-->
                <TextBox Name="SubjectPreviewText"  Grid.Row="5" Grid.Column="1"  Grid.ColumnSpan="2" IsEnabled="False" VerticalAlignment="Top" >
                    <TextBox.Text>
                        <MultiBinding Converter="{StaticResource TokenReplacerConverter}">
                            <Binding ElementName="SubjectTextBox" Path="Text" UpdateSourceTrigger="PropertyChanged" />
                            <Binding Path="TokenReplacer" />
                        </MultiBinding>
                    </TextBox.Text>
                </TextBox>

                <!--subject preview token hint panel-->
                <userControls:TokenHintPanel Grid.Row="5" Grid.Column="3" TextWithToken="{Binding Text, ElementName=SubjectTextBox}" Translator="{Binding Translator}" />

                <!--Keyword part-->
                <Label Name="KeywordLabel" Grid.Row="6" Grid.Column="0" FontWeight="Bold">Keyword:</Label>
                <views:BindableTextBox x:Name="KeywordTextBox" Grid.Row="6" Grid.Column="1"  
                                       Text="{Binding KeywordViewModel.Text}" 
                                       BindableSelectionStart="{Binding KeywordViewModel.CurrentCursorPos}" />

                <Label Name="KeywordTokenLabel" Grid.Row="6" Grid.Column="2">Add Token:</Label>
                <!--combobox choose token for keyword-->
                <ComboBox 
                    Name="KeywordsTokensComboBox" Grid.Row="6" Grid.Column="3" ItemsSource="{Binding KeywordViewModel.TokenList}" SelectedItem="{Binding KeywordViewModel.SelectedToken}" IsSynchronizedWithCurrentItem="True" >
                    <i:Interaction.Behaviors>
                        <obsidian:EventToCommandBehavior Event="SelectionChanged" Command="{Binding KeywordViewModel.OnSelectionChangedCommand}" />
                    </i:Interaction.Behaviors>
                </ComboBox>
                <!--label for token preview-->
                <Label Foreground="DarkGray"  Name="KeywordPreviewLabel" Grid.Row="7" Grid.Column="0" VerticalAlignment="Top" Padding="5,0,0,13">Preview:</Label>
                <!--token preview for keyword-->
                <TextBox Name="KeywordPreviewText" Grid.Row="7" Grid.Column="1"  Grid.ColumnSpan="2" IsEnabled="False" VerticalAlignment="Top">
                    <TextBox.Text>
                        <MultiBinding Converter="{StaticResource TokenReplacerConverter}">
                            <Binding ElementName="KeywordTextBox" Path="Text" UpdateSourceTrigger="PropertyChanged" />
                            <Binding Path="TokenReplacer" />
                        </MultiBinding>
                    </TextBox.Text>
                </TextBox>
                <!--token info-->
                <userControls:TokenHintPanel Grid.Row="7" Grid.Column="3" TextWithToken="{Binding Text, ElementName=KeywordTextBox}" Translator="{Binding Translator}"  Height="36"/>
            </Grid>
        </HeaderedContentControl>

        <HeaderedContentControl Name="StampControl" Margin="0,5,0,0" Template="{StaticResource HeaderPanelTemplate}"
                                Header="Stamp">
            <StackPanel>
                <CheckBox Name="StampCheckBox" Margin="0 5 0 0"
                          IsChecked="{Binding CurrentProfile.Stamping.Enabled, Mode=TwoWay}">
                    Add a stamp text on top of all pages
                </CheckBox>
                <Grid IsEnabled="{Binding ElementName=StampCheckBox, Path=IsChecked}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Label Name="StampTextLabel" Grid.Row="1" Grid.Column="0" Margin="0 0 5 0">Stamp Text:</Label>
                    <Label Name="StampFontLabel" Grid.Row="1" Grid.Column="1" Margin="0 0 5 0">Font:</Label>
                    <Label Name="StampFontColorLabel" Grid.Row="1" Grid.Column="2" Margin="0 0 5 0">Color:</Label>
                    <TextBox Name="StampText"
                             Grid.Row="2" Grid.Column="0" Margin="0 0 5 0"
                             Text="{Binding CurrentProfile.Stamping.StampText, Mode=TwoWay}" 
                             TextChanged="TextBoxBase_OnTextChanged"
                             />
                    <Button Grid.Row="2" Grid.Column="1" Margin="0 0 5 0" Content="{Binding FontButtonText}"
                            Command="{Binding ChooseStampFont}" Width="150" />
                    <Button Grid.Row="2" Grid.Column="2" Command="{Binding ChooseStampColor}">
                        <Rectangle Height="16" Width="32">
                            <Rectangle.Fill>
                                <SolidColorBrush
                                    Color="{Binding CurrentProfile.Stamping.Color, Converter={StaticResource ColorConverter}}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                    <StackPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Margin="0 5 0 0"
                                Orientation="Horizontal">
                        <StackPanel Orientation="Horizontal">
                            <CheckBox Name="StampFontAsOutlineCheckBox" 
                                  IsChecked="{Binding CurrentProfile.Stamping.FontAsOutline}" Margin="0,5,0,0">
                                Draw font as outline
                            </CheckBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal"
                                    IsEnabled="{Binding ElementName=StampFontAsOutlineCheckBox, Path=IsChecked}">
                            <Label Margin="5,0,5,0">-</Label>
                            <Label Name="StampOutlineWidthLabel">Width:</Label>
                            <TextBox Text="{Binding CurrentProfile.Stamping.FontOutlineWidth}"
                                      Margin="5 0 0 0" Width="40" Height="20" VerticalAlignment="Center" />
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </StackPanel>
        </HeaderedContentControl>
    </StackPanel>
</UserControl>